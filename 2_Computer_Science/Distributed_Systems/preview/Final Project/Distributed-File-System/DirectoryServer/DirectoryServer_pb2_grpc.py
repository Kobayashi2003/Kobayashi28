# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import DirectoryServer.DirectoryServer_pb2 as DirectoryServer__pb2


class DirServerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.fileserver_online = channel.unary_unary(
        '/DirServer/fileserver_online',
        request_serializer=DirectoryServer__pb2.FileServer_On.SerializeToString,
        response_deserializer=DirectoryServer__pb2.Dir_Reply.FromString,
        )
    self.fileserver_offline = channel.unary_unary(
        '/DirServer/fileserver_offline',
        request_serializer=DirectoryServer__pb2.FileServer_Off.SerializeToString,
        response_deserializer=DirectoryServer__pb2.Dir_Reply.FromString,
        )
    self.getfileserver = channel.unary_unary(
        '/DirServer/getfileserver',
        request_serializer=DirectoryServer__pb2.Dir_Empty.SerializeToString,
        response_deserializer=DirectoryServer__pb2.FileServer_List.FromString,
        )


class DirServerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def fileserver_online(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def fileserver_offline(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getfileserver(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DirServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'fileserver_online': grpc.unary_unary_rpc_method_handler(
          servicer.fileserver_online,
          request_deserializer=DirectoryServer__pb2.FileServer_On.FromString,
          response_serializer=DirectoryServer__pb2.Dir_Reply.SerializeToString,
      ),
      'fileserver_offline': grpc.unary_unary_rpc_method_handler(
          servicer.fileserver_offline,
          request_deserializer=DirectoryServer__pb2.FileServer_Off.FromString,
          response_serializer=DirectoryServer__pb2.Dir_Reply.SerializeToString,
      ),
      'getfileserver': grpc.unary_unary_rpc_method_handler(
          servicer.getfileserver,
          request_deserializer=DirectoryServer__pb2.Dir_Empty.FromString,
          response_serializer=DirectoryServer__pb2.FileServer_List.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'DirServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
