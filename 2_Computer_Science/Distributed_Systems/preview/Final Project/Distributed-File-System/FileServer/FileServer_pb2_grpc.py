# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import FileServer.FileServer_pb2 as FileServer__pb2


class FileServerStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.upload = channel.stream_unary(
        '/FileServer/upload',
        request_serializer=FileServer__pb2.Upload_Request.SerializeToString,
        response_deserializer=FileServer__pb2.Reply.FromString,
        )
    self.upload_without_syn = channel.stream_unary(
        '/FileServer/upload_without_syn',
        request_serializer=FileServer__pb2.Upload_Request.SerializeToString,
        response_deserializer=FileServer__pb2.Reply.FromString,
        )
    self.download = channel.unary_stream(
        '/FileServer/download',
        request_serializer=FileServer__pb2.Download_Request.SerializeToString,
        response_deserializer=FileServer__pb2.Chunk.FromString,
        )
    self.delete = channel.unary_unary(
        '/FileServer/delete',
        request_serializer=FileServer__pb2.Delete_Request.SerializeToString,
        response_deserializer=FileServer__pb2.Reply.FromString,
        )
    self.delete_without_syn = channel.unary_unary(
        '/FileServer/delete_without_syn',
        request_serializer=FileServer__pb2.Delete_Request.SerializeToString,
        response_deserializer=FileServer__pb2.Reply.FromString,
        )
    self.list = channel.unary_unary(
        '/FileServer/list',
        request_serializer=FileServer__pb2.List_Request.SerializeToString,
        response_deserializer=FileServer__pb2.List_Reply.FromString,
        )
    self.pwd = channel.unary_unary(
        '/FileServer/pwd',
        request_serializer=FileServer__pb2.Empty.SerializeToString,
        response_deserializer=FileServer__pb2.PWD_Reply.FromString,
        )
    self.mkdir = channel.unary_unary(
        '/FileServer/mkdir',
        request_serializer=FileServer__pb2.Mkdir_Request.SerializeToString,
        response_deserializer=FileServer__pb2.Reply.FromString,
        )


class FileServerServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def upload(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def upload_without_syn(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def download(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def delete(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def delete_without_syn(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def list(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def pwd(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def mkdir(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FileServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'upload': grpc.stream_unary_rpc_method_handler(
          servicer.upload,
          request_deserializer=FileServer__pb2.Upload_Request.FromString,
          response_serializer=FileServer__pb2.Reply.SerializeToString,
      ),
      'upload_without_syn': grpc.stream_unary_rpc_method_handler(
          servicer.upload_without_syn,
          request_deserializer=FileServer__pb2.Upload_Request.FromString,
          response_serializer=FileServer__pb2.Reply.SerializeToString,
      ),
      'download': grpc.unary_stream_rpc_method_handler(
          servicer.download,
          request_deserializer=FileServer__pb2.Download_Request.FromString,
          response_serializer=FileServer__pb2.Chunk.SerializeToString,
      ),
      'delete': grpc.unary_unary_rpc_method_handler(
          servicer.delete,
          request_deserializer=FileServer__pb2.Delete_Request.FromString,
          response_serializer=FileServer__pb2.Reply.SerializeToString,
      ),
      'delete_without_syn': grpc.unary_unary_rpc_method_handler(
          servicer.delete_without_syn,
          request_deserializer=FileServer__pb2.Delete_Request.FromString,
          response_serializer=FileServer__pb2.Reply.SerializeToString,
      ),
      'list': grpc.unary_unary_rpc_method_handler(
          servicer.list,
          request_deserializer=FileServer__pb2.List_Request.FromString,
          response_serializer=FileServer__pb2.List_Reply.SerializeToString,
      ),
      'pwd': grpc.unary_unary_rpc_method_handler(
          servicer.pwd,
          request_deserializer=FileServer__pb2.Empty.FromString,
          response_serializer=FileServer__pb2.PWD_Reply.SerializeToString,
      ),
      'mkdir': grpc.unary_unary_rpc_method_handler(
          servicer.mkdir,
          request_deserializer=FileServer__pb2.Mkdir_Request.FromString,
          response_serializer=FileServer__pb2.Reply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'FileServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
